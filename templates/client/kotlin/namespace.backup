
@Serializable
data class ResponseWithMeta<M, D>(val meta: M, val data: D)

@Serializable
data class Response<D>(val data: D)

enum class SortOrder {
    @SerialName("asc") ASC,
    @SerialName("desc") DESC,
}

@Serializable
data class PagingInfo(val count: Int, val numberOfPages: Int?)

@Serializable
data class TokenInfo(val token: String)

@Serializable
data class TeoException(override val message: String, val type: String, val errors: Map<String, String>?) : Exception(message);


@Serializable
data class StringFilter(
    val equals: String? = null,
    val `in`: List<String>? = null,
    val notIn: List<String>? = null,
    val lt: String? = null,
    val lte: String? = null,
    val gt: String? = null,
    val gte: String? = null,
    val contains: String? = null,
    val startsWith: String? = null,
    val endsWith: String? = null,
    val matches: String? = null,
    @Serializable(with=AnySerializer::class)
    val not: Any? = null,
)

@Serializable
data class StringNullableFilter(
    @Serializable(with=AnySerializer::class)
    val equals: Any? = null,
    val `in`: List<String>? = null,
    val notIn: List<String>? = null,
    val lt: String? = null,
    val lte: String? = null,
    val gt: String? = null,
    val gte: String? = null,
    val contains: String? = null,
    val startsWith: String? = null,
    val endsWith: String? = null,
    val matches: String? = null,
    @Serializable(with=AnySerializer::class)
    val not: Any? = null,
)

@Serializable
data class StringWithAggregatesFilter(
    val equals: String? = null,
    val `in`: List<String>? = null,
    val notIn: List<String>? = null,
    val lt: String? = null,
    val lte: String? = null,
    val gt: String? = null,
    val gte: String? = null,
    val contains: String? = null,
    val startsWith: String? = null,
    val endsWith: String? = null,
    val matches: String? = null,
    @Serializable(with=AnySerializer::class)
    val not: Any? = null,
    @SerialName("_count")
    val count: IntFilter? = null,
    @SerialName("_max")
    val max: StringFilter? = null,
    @SerialName("_min")
    val min: StringFilter? = null,
)

@Serializable
data class StringNullableWithAggregatesFilter(
    @Serializable(with=AnySerializer::class)
    val equals: Any? = null,
    val `in`: List<String>? = null,
    val notIn: List<String>? = null,
    val lt: String? = null,
    val lte: String? = null,
    val gt: String? = null,
    val gte: String? = null,
    val contains: String? = null,
    val startsWith: String? = null,
    val endsWith: String? = null,
    val matches: String? = null,
    @Serializable(with=AnySerializer::class)
    val not: Any? = null,
    @SerialName("_count")
    val count: IntNullableFilter? = null,
    @SerialName("_max")
    val max: StringNullableFilter? = null,
    @SerialName("_min")
    val min: StringNullableFilter? = null,
)

@Serializable
data class BooleanFilter(
    val equals: Boolean? = null,
    @Serializable(with=AnySerializer::class)
    val not: Any? = null,
)

@Serializable
data class BooleanNullableFilter(
    @Serializable(with=AnySerializer::class)
    val equals: Any? = null,
    @Serializable(with=AnySerializer::class)
    val not: Any? = null,
)

@Serializable
data class BooleanWithAggregatesFilter(
    val equals: Boolean? = null,
    @Serializable(with=AnySerializer::class)
    val not: Any? = null,
    @SerialName("_count")
    val count: IntFilter? = null,
    @SerialName("_min")
    val min: BooleanFilter? = null,
    @SerialName("_max")
    val max: BooleanFilter? = null,
)

@Serializable
data class BooleanNullableWithAggregatesFilter(
    @Serializable(with=AnySerializer::class)
    val equals: Any? = null,
    @Serializable(with=AnySerializer::class)
    val not: Any? = null,
    @SerialName("_count")
    val count: IntNullableFilter? = null,
    @SerialName("_min")
    val min: BooleanNullableFilter? = null,
    @SerialName("_max")
    val max: BooleanNullableFilter? = null,
)

@Serializable
data class Filter<T>(
    val equals: T? = null,
    val `in`: List<T>? = null,
    val notIn: List<T>? = null,
    val lt: T? = null,
    val lte: T? = null,
    val gt: T? = null,
    val gte: T? = null,
    @Serializable(with=AnySerializer::class)
    val not: Any? = null,
)

@Serializable
data class NullableFilter<T>(
    @Serializable(with=AnySerializer::class)
    val equals: Any? = null,
    val `in`: List<T>? = null,
    val notIn: List<T>? = null,
    val lt: T? = null,
    val lte: T? = null,
    val gt: T? = null,
    val gte: T? = null,
    @Serializable(with=AnySerializer::class)
    val not: Any? = null,
)

@Serializable
data class FilterWithAggregates<T, U>(
    val equals: T? = null,
    val `in`: List<T>? = null,
    val notIn: List<T>? = null,
    val lt: T? = null,
    val lte: T? = null,
    val gt: T? = null,
    val gte: T? = null,
    @Serializable(with=AnySerializer::class)
    val not: Any? = null,
    @SerialName("_count")
    val count: IntFilter? = null,
    @SerialName("_min")
    val min: U? = null,
    @SerialName("_max")
    val max: U? = null,
)

@Serializable
data class NullableFilterWithAggregates<T, U>(
    @Serializable(with=AnySerializer::class)
    val equals: Any? = null,
    val `in`: List<T>? = null,
    val notIn: List<T>? = null,
    val lt: T? = null,
    val lte: T? = null,
    val gt: T? = null,
    val gte: T? = null,
    @Serializable(with=AnySerializer::class)
    val not: Any? = null,
    @SerialName("_count")
    val count: IntNullableFilter? = null,
    @SerialName("_min")
    val min: U? = null,
    @SerialName("_max")
    val max: U? = null,
)

@Serializable
data class NumberFilterWithAggregates<T, U>(
    val equals: T? = null,
    val `in`: List<T>? = null,
    val notIn: List<T>? = null,
    val lt: T? = null,
    val lte: T? = null,
    val gt: T? = null,
    val gte: T? = null,
    @Serializable(with=AnySerializer::class)
    val not: Any? = null,
    @SerialName("_count")
    val count: IntFilter? = null,
    @SerialName("_sum")
    val sum: U? = null,
    @SerialName("_avg")
    val avg: DoubleFilter? = null,
    @SerialName("_min")
    val min: U? = null,
    @SerialName("_max")
    val max: U? = null,
)

@Serializable
data class NumberNullableFilterWithAggregates<T, U>(
    @Serializable(with=AnySerializer::class)
    val equals: Any? = null,
    val `in`: List<T>? = null,
    val notIn: List<T>? = null,
    val lt: T? = null,
    val lte: T? = null,
    val gt: T? = null,
    val gte: T? = null,
    @Serializable(with=AnySerializer::class)
    val not: Any? = null,
    @SerialName("_count")
    val count: IntNullableFilter? = null,
    @SerialName("_sum")
    val sum: U? = null,
    @SerialName("_avg")
    val avg: DoubleNullableFilter? = null,
    @SerialName("_min")
    val min: U? = null,
    @SerialName("_max")
    val max: U? = null,
)

typealias ObjectIdFilter = Filter<String>
typealias ObjectIdNullableFilter = NullableFilter<String>
typealias ObjectIdWithAggregatesFilter = FilterWithAggregates<String, StringFilter>
typealias ObjectIdNullableWithAggregatesFilter = NullableFilterWithAggregates<String, StringNullableFilter>
typealias IntFilter = Filter<Int>
typealias IntNullableFilter = NullableFilter<Int>
typealias IntWithAggregatesFilter = NumberFilterWithAggregates<Int, IntFilter>
typealias IntNullableWithAggregatesFilter = NumberNullableFilterWithAggregates<Int, IntNullableFilter>
typealias LongFilter = Filter<Long>
typealias LongNullableFilter = NullableFilter<Long>
typealias LongWithAggregatesFilter = NumberFilterWithAggregates<Long, LongFilter>
typealias LongNullableWithAggregatesFilter = NumberNullableFilterWithAggregates<Long, LongNullableFilter>
typealias FloatFilter = Filter<Float>
typealias FloatNullableFilter = NullableFilter<Float>
typealias FloatWithAggregatesFilter = NumberFilterWithAggregates<Float, FloatFilter>
typealias FloatNullableWithAggregatesFilter = NumberNullableFilterWithAggregates<Float, FloatNullableFilter>
typealias DoubleFilter = Filter<Double>
typealias DoubleNullableFilter = NullableFilter<Double>
typealias DoubleWithAggregatesFilter = NumberFilterWithAggregates<Double, DoubleFilter>
typealias DoubleNullableWithAggregatesFilter = NumberNullableFilterWithAggregates<Double, DoubleNullableFilter>
typealias BigDecimalFilter = Filter<@Contextual BigDecimal>
typealias BigDecimalNullableFilter = NullableFilter<@Contextual BigDecimal>
typealias BigDecimalWithAggregatesFilter = NumberFilterWithAggregates<@Contextual BigDecimal, @Contextual BigDecimalFilter>
typealias BigDecimalNullableWithAggregatesFilter = NumberNullableFilterWithAggregates<@Contextual BigDecimal, @Contextual BigDecimalNullableFilter>
typealias DateFilter = Filter<@Contextual LocalDate>
typealias DateNullableFilter = NullableFilter<@Contextual LocalDate>
typealias DateWithAggregatesFilter = FilterWithAggregates<@Contextual LocalDate, DateFilter>
typealias DateNullableWithAggregatesFilter = FilterWithAggregates<@Contextual LocalDate, DateNullableFilter>
typealias DateTimeFilter = Filter<@Contextual OffsetDateTime>
typealias DateTimeNullableFilter = NullableFilter<@Contextual LocalDateTime>
typealias DateTimeWithAggregatesFilter = FilterWithAggregates<@Contextual LocalDateTime, DateTimeFilter>
typealias DateTimeNullableWithAggregatesFilter = FilterWithAggregates<@Contextual LocalDateTime, DateTimeNullableFilter>

@Serializable
data class EnumFilter<T>(
    val equals: T? = null,
    val `in`: List<T>? = null,
    val notIn: List<T>? = null,
    @Serializable(with=AnySerializer::class)
    val not: Any? = null,
)

@Serializable
data class EnumNullableFilter<T>(
    @Serializable(with=AnySerializer::class)
    val equals: Any? = null,
    val `in`: List<T>? = null,
    val notIn: List<T>? = null,
    @Serializable(with=AnySerializer::class)
    val not: Any? = null,
)

@Serializable
data class ArrayFilter<T>(
    val equals: List<T>? = null,
    val has: T? = null,
    val hasSome: List<T>? = null,
    val hasEvery: List<T>? = null,
    val isEmpty: Boolean? = null,
    val length: Int? = null,
)

@Serializable
data class ArrayNullableFilter<T>(
    @Serializable(with=AnySerializer::class)
    val equals: Any? = null,
    val has: T? = null,
    val hasSome: List<T>? = null,
    val hasEvery: List<T>? = null,
    val isEmpty: Boolean? = null,
    val length: Int? = null,
)

@Serializable
data class NumberFieldUpdateOperationsInput<T>(
    val set: T? = null,
    val increment: T? = null,
    val decrement: T? = null,
    val multiply: T? = null,
    val divide: T? = null,
)

@Serializable
data class NullableNumberFieldUpdateOperationsInput<T>(
    @Serializable(with=AnySerializer::class)
    val set: Any? = null,
    val increment: T? = null,
    val decrement: T? = null,
    val multiply: T? = null,
    val divide: T? = null,
)

@Serializable
data class ArrayFieldUpdateOperationsInput<T>(
    val set: List<T>? = null,
    val push: T? = null,
)

@Serializable
data class NullableArrayFieldUpdateOperationsInput<T>(
    @Serializable(with=AnySerializer::class) val set: Any? = null,
    val push: T? = null,
)

{{ render_namespace(main_namespace, conf, main_namespace) }}



// code



class {{ conf.object_name|capitalize_first }}(token: String? = null) {
  {%- for delegate in outline.delegates() %}
  val {{ delegate.model_name|camelcase }}: {{ delegate.model_name|capitalize_first }}Delegate = {{ delegate.model_name|capitalize_first }}Delegate(token)
  {%- endfor %}
}